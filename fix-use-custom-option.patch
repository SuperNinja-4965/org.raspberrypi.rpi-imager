From 2d87a2275f9a2525f000d0f216468b9cced97e98 Mon Sep 17 00:00:00 2001
From: Floris Bos <bos@je-eigen-domein.nl>
Date: Sat, 6 Mar 2021 11:39:58 +0100
Subject: [PATCH] Revert "Linux: disable high dpi scaling on incorrect EDID"

This reverts commit 37cc9e8736967b3100294c05be098066a8485651.
---
 main.cpp | 41 +++++++++--------------------------------
 1 file changed, 9 insertions(+), 32 deletions(-)

diff --git a/main.cpp b/main.cpp
index 9854cc5..3563e5a 100644
--- a/main.cpp
+++ b/main.cpp
@@ -31,35 +31,6 @@ static void consoleMsgHandler(QtMsgType, const QMessageLogContext &, const QStri
 }
 #endif
 
-/* Workarounds for systems on which correct EDID info is not available */
-static inline void _handleDpi(int argc, char *argv[])
-{
-    QGuiApplication tmp(argc, argv);
-    QScreen *primaryScreen = QGuiApplication::primaryScreen();
-    int w = primaryScreen->geometry().width();
-    int h = primaryScreen->geometry().height();
-    int w_mm  = primaryScreen->physicalSize().width();
-    int h_mm = primaryScreen->physicalSize().height();
-
-#ifdef QT_NO_WIDGETS
-    if (h > 720)
-    {
-        qputenv("QT_SCALE_FACTOR", QByteArray::number(h / 720.0, 'f', 2));
-    }
-#else
-    qDebug() << "Displaying on:"
-             << primaryScreen->manufacturer()
-             << primaryScreen->model()
-             << QString::number(w)+"x"+QString::number(h)
-             << QString::number(w_mm)+" mm x "+QString::number(h_mm)+" mm";
-    if (w_mm < 100)
-    {
-        qDebug() << "Physical display dimensions seem unrealistically low. Disabling high DPI scaling";
-        QCoreApplication::setAttribute(Qt::AA_DisableHighDpiScaling);
-    }
-#endif
-}
-
 int main(int argc, char *argv[])
 {
     QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
@@ -67,10 +38,16 @@ int main(int argc, char *argv[])
     // prefer ANGLE (DirectX) over desktop OpenGL
     QCoreApplication::setAttribute(Qt::AA_UseOpenGLES);
 #endif
-#ifdef Q_OS_LINUX
-    _handleDpi(argc, argv);
-#endif
 #ifdef QT_NO_WIDGETS
+    {
+        QGuiApplication tmp(argc, argv);
+        int h = QGuiApplication::primaryScreen()->geometry().height();
+        if (h > 720)
+        {
+            qputenv("QT_SCALE_FACTOR", QByteArray::number(h / 720.0, 'f', 2));
+        }
+    }
+
     QGuiApplication app(argc, argv);
 #else
     QApplication app(argc, argv);
